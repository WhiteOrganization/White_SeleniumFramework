<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.github.whiteorganization</groupId>
    <artifactId>white-selenium-framework</artifactId>
    <version>0.2.5-SNAPSHOT</version>
    <name>${project.groupId}:${project.artifactId}</name>
    <description>A Selenium Framework that will help to execute tests and custom scenarios faster and reduce the effort
        to access many sections Selenium related.
    </description>
    <url>https://github.com/WhiteOrganization/White_SeleniumFramework</url>

    <properties>
        <!--region Project Configurations FILL THESE-->
        <!-- WARNING: add release scope if 1.9 and older versions are used at build/plugins/plugin/[maven-compiler-plugin]/configuration-->
        <java.version>8</java.version>
        <selenium.version>4.6.0</selenium.version>
        <organization>WhiteOrganization</organization>
        <repository.name>White_SeleniumFramework</repository.name>
        <!--endregion-->

        <!-- region automated configurations -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- endregion automated configurations -->
    </properties>

    <licenses>
        <license>
            <name>Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License</name>
            <url>https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Obed Vazquez</name>
            <email>obed.vazquez@gmail.com</email>
            <organization>${organization}</organization>
            <organizationUrl>https://github.com/${organization}/</organizationUrl>
        </developer>
    </developers>

    <!-- region Maven releases support -->
    <!-- You also require Maven settings.xml configuration to authenticate when performing a `mvn release:prepare` -->
    <scm>
        <connection>scm:git:https://github.com/${organization}/${repository.name}.git</connection>
        <developerConnection>scm:git:https://github.com/${organization}/${repository.name}.git</developerConnection>
        <url>https://github.com/${organization}/${repository.name}/tree/main</url>
        <tag>white-selenium-framework-0.2.5</tag>
    </scm>
    <!-- endregion Maven releases support -->

    <dependencies>
        <!-- region Selenium -->
        <!-- region Pure Selenium -->
        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>4.6.0</version>
        </dependency>
        <!-- endregion Pure Selenium -->

        <!-- region bonigarcia WebDriverManager -->
        <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>5.3.1</version>
        </dependency>
        <!-- endregion  -->

        <!-- endregion Selenium -->

        <!-- region HtmlUnitDriver -->
        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/htmlunit-driver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>htmlunit-driver</artifactId>
            <version>${selenium.version}</version>
        </dependency>
        <!-- endregion -->

        <!-- region Logs -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.5</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
            <type>jar</type>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.5</version>
        </dependency>
        <!-- endregion -->

        <!-- region UnitTesting -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency><!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.23.1</version>
            <scope>test</scope>
        </dependency>
        <!-- endregion testing -->
    </dependencies>

    <profiles>
        <!-- region GitHub Profile -->
        <!-- Here used only to exclude Failing tests on production -->
        <profile>
            <id>github</id>
            <activation>
                <property>
                    <name>target</name>
                    <value>github</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <name>GitHub Maven ${organization} ${repository.name}. Repository</name>
                    <url>https://maven.pkg.github.com/whiteorganization/white_seleniumframework</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <!-- region Maven is able to run JUnit5 Tests -->
                    <!-- This requires junit-jupiter-engine [in junit-jupiter] dependency! -->
                    <!-- This will run everything that Starts or ends with Test[(Case)|s]{0-1}. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M7</version>
                        <configuration>
                            <excludes>
                                <exclude>org.white_sdev.white_seleniumframework.framework.prodexcluded.**</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <!-- endregion -->
                </plugins>
            </build>
        </profile>
        <!-- endregion GitHub Profile -->

        <!-- region Sonatype Maven Central Profile -->
        <profile>
            <id>maven-central</id>
            <activation>
                <property>
                    <name>target</name>
                    <value>sonatype</value>
                </property>
            </activation>
            <distributionManagement>
                <!-- region Sonatype -->
                <!-- You need to configure credentials for the organization ossrh in your maven settings to  deploy to the repo
                    And add Sonatype servers with your credentials with access to the repository.
                Steps:  https://central.sonatype.org/publish/publish-maven/#distribution-management-and-authentication -->
                <!-- Template to add to settings.xml:
            <servers>
                <server>
                    <id>ossrh</id>
                    <username>{your-jira-id}</username>
                    <password>{your-jira-pwd}</password>
                </server>
            </servers>
            <mirrors>
                <mirror>
                    <id>maven-default-http-blocker</id>
                    <mirrorOf>external:http:*</mirrorOf>
                    <name>Pseudo repository to mirror external repositories initially using HTTP.</name>
                    <url>http://0.0.0.0/</url>
                    <blocked>true</blocked>
                </mirror>
            </mirrors>
            <profiles>

                <profile>
                    <id>ossrh</id>
                    <activation>
                        <activeByDefault>true</activeByDefault>
                    </activation>
                    <properties>
                        <gpg.executable>gpg2</gpg.executable>
                        <gpg.passphrase>{Your_gpg_key_passphrase}</gpg.passphrase>
                    </properties>
                </profile>
                 Template to add to settings.xml -->
                <repository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <!-- endregion Sonatype -->
            </distributionManagement>
            <build>
                <plugins>
                    <!-- region Sonatype Plugins -->
                    <!-- region Maven Release Plugin -->
                    <!-- we can now use `mvn release:clean release:prepare -D target=sonatype`
                        followed by `mvn release:perform -D target=sonatype` -->
                    <!-- https://central.sonatype.org/publish/publish-maven/#performing-a-release-deployment-with-the-maven-release-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>2.5.3</version>
                        <configuration>
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <useReleaseProfile>false</useReleaseProfile>
                            <releaseProfiles>release</releaseProfiles>
                            <goals>deploy</goals>
                        </configuration>
                    </plugin>
                    <!-- endregion Maven Release Plugin -->

                    <!-- region Sonatype Nexus Config -->
                    <!-- https://central.sonatype.org/publish/publish-maven/#distribution-management-and-authentication -->
                    <!-- https://central.sonatype.org/publish/publish-maven/#nexus-staging-maven-plugin-for-deployment-and-release -->
                    <!-- for SNAPSHOT's use `mvn clean deploy -D target=sonatype` -->
                    <!-- for Releases: use `mvn versions:set -DnewVersion=1.x.x -D target=sonatype`
                        followed by `mvn clean deploy -D target=sonatype` -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <!-- Versions: https://search.maven.org/artifact/org.sonatype.plugins/nexus-staging-maven-plugin -->
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <!-- endregion Sonatype Nexus Config -->

                    <!-- region Sonatype SRC+Javadocs plugin -->
                    <!-- https://central.sonatype.org/publish/publish-maven/#javadoc-and-sources-attachments
                        The sources and Javadocs will be included in the deployment  -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9.1</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- endregion Sonatype SRC+Javadocs plugin -->

                    <!-- region GPG Signed -->
                    <!-- relies on the gpg command being installed and the GPG credentials in settings.xml
                        https://central.sonatype.org/publish/publish-maven/#gpg-signed-components -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- endregion GPG Signed -->

                    <!-- endregion Sonatype Plugins -->
                </plugins>
            </build>
        </profile>
        <!-- endregion Sonatype Maven Central Profile -->
    </profiles>

    <build>
        <plugins>
            <!-- region Established the java version defined in the properties' section for every scope (compatible with newer java versions) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!-- WARNING: add release scope for 1.9 and older versions -->
                    <!--                    <release>${java.version}</release>-->
                </configuration>
            </plugin>
            <!-- endregion -->

            <!-- region Maven is able to run JUnit5 Tests -->
            <!-- This requires junit-jupiter-engine [in junit-jupiter] dependency! -->
            <!-- This will run everything that Starts or ends with Test[(Case)|s]{0-1}. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <!-- endregion -->

            <!-- region Maven releases support -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>
            <!-- endregion Maven releases support -->
        </plugins>
    </build>
</project>